<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="treeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="treeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADs
        DwAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8AKwADCgENAxsBJgMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHgEr
        Ax4BKwMeASsDHgErAx4BKwMeASsDHQEpAxIBGAMKAQ0DGwEmAx4BKwMeASsDHgErAx4BKwMeASsDHgEr
        Ax4BKwMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHQEpAxIBGAMCAQMUAAMBAQIDEQEXAxMBGgMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAw4BE1AAAwgBCwM9AWoDRwGEAxQBHANGAYADSwGO
        A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9
        A0UBfQNIAYQDSgGKA0gBhwNNAZEDRQF9A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9A0UBfQNFAX0DRQF9
        A0UBfQNFAX0DRQF9A0UBfQNIAYQDSgGLAx8BLBQAAycBOwM+AWsDPAFmAzwBZgM8AWYDPAFmAzwBZgM8
        AWYDPAFmAzwBZgM8AWYDQgF0AxYBH0gAAwQBBQM/AXADKAHpAwkB+gNHAYQDKQHzAyoBQAMOARMDDgET
        Aw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDGgEk
        A1IBpgMSAfsDOgFgAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgET
        Aw4BEwMOARMDGQEjA00BmAM5AWADAAEBEAABTQFMAUsBjwMbASYDEwEaAxMBGgMTARoDEwEaAxMBGgMT
        ARoDEwEaAxMBGgMTARoDOgFhAzgBXEQAAwQBBgNDAXkDIwHsAwAB/wMoAekDPQFpAwAB/wMbASZAAAMK
        AQ4DUAGfAwAB/wM9AWk4AAMEAQUDQAFxA0MBeAMFAQcQAAFQAk4BmQMAAQEDKQE+Az0BZwM9AWcDPQFn
        Az0BZwM9AWcDPQFnAz0BZwMdBCoBQAM9AWdAAAMEAQYDRQGBAxgB8wMAAf8DIwHsAz8BcAMIAQsDAAH/
        AxsBJkAAAwoBDgNQAZ8DAAH/A0gBhgMAAQE4AAMzAVMDSAGFAw0BERAAAVACTgGZAwABAQMbASYDKgFA
        AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAxMBGgMqAUADPQFnHwABAQMUARsDOQFgA0UBgANDAXkDLwFK
        AwQBBgQAAwQBBQNDAXkDGAHzAwAB/wMYAfMDQwF6AwQBBQcAAf8DGwEmQAADCgEOA1ABnwMAAf8DUAGb
        AwoBDjgAAyQBNQNIAYUDFAEbEAABUAJOAZkDAAEBAyABLgMxAU0DMQFNAzEBTQMxAU0DKgFBAwkBDAgA
        AyoBQAM9AWcUAAMHAQoDKwFDA0wBsQMAAf4DEgH3Ax4B7wMcAfEDBgH7Ax4B7wNIAYkDRAF9AyMB7AMA
        Af8DGAHzA0UBgQMEAQYLAAH/AxsBJkAAAwoBDgNQAZ8DAAH/A1ABnwMVAR04AAMRARcDRwGAAx8BLBAA
        AVACTgGZAwABAQMgAS4DMQFNAzEBTQMxAU0DMQFNAyoBQQMIAQsIAAMqAUADPQFnEAADCQEMAz0BawMz
        AeADJwHqA0sBrwNFAYEDPQFpAz8BbwNJAZIDRgHGAwkB+gMDAf0DAAH/AyMB7ANDAXoDBAEGDwAB/wMb
        ASZAAAMKAQ4DUAGfAwAB/wNQAZoDHwEtOAADAgEDA0EBcgMqAUAQAAFQAk4BmQMAAQEDLQFFA0IBdANC
        AXQDQgF0A0IBdANCAXQDQgF0A0IBdAMgAS4DKgFAAz0BZxAAAzUBWAMuAeUDQQHRAzoBYQMQARYMAAMD
        AQQDHwEtA0gBjAMZAfIDAwH9A0MBfAMEAQUTAAH/AyABL0AAAw0BEQNQAaQDAAH/A0sBjgMsAUQ8AAM7
        AWMDMgFQEAABUAJOAZkDAAEBAxEBFwMbASYDGwEmAxsBJgMbASYDGwEmAxsBJgMbASYDCwEPAyoBQAM9
        AWcMAAMHAQoDOQHZAzQB3gM0AVUDBAEFGAADDwEUA0gBiwMJAfoDSAGJAwABARMAAf8DKwFCQAADEgEZ
        A1MBsAMAAf8DRgF+AzcBWjwAAzQBVAM6AWAQAAFQAk4BmQMAAQECQgFBAXMBXgFZAVYBvwFeAVkBVgG/
        AV4BWQFWAb8BXgFZAVYBvwFeAVkBVgG/A0IBdAgAAyoBQAM9AWcMAAM9AWkDBgH7A0oBkwMEAQUgAAMf
        AS0DRgHGAx4B7wMEAQYTAAH/AysBQkAAAxIBGQNTAbADAAH/A0ABbwM9AWg8AAMnAToDRAF7EAABUAJO
        AZkDAAEBAwwBEAMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDCAELAyoBQAM9AWcMAANHAcMDLgHl
        AzABSyQAAwQBBQNJAZIDAwH8Ay8BShMAAf8DKwFCQAADEgEZA1MBsAMAAf8DOAFcA0MBdwMHAQk4AAMb
        ASYDSwGOEAABUAJOAZkDAAEBAygBPQM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDHQQqAUADPQFn
        DAADHAHxAzkB2QMcAScoAAM/AW8DHAHxA0MBeRMAAf8DLAFDQAADEgEZA1UBsQMAAf8DLwFJA0gBhQMg
        AS8DCgENAwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAwoBDQMc
        AScDUQGgEAABUAJOAZkDAAEBAxsBJgMqAUADKgFAAx0BKQMTARoDEwEaAxsBJgMoAT0DIgExAzgBXQM9
        AWcMAAMPAfgDPQHXAxcBICgAAz0BaQMeAe8DRQGAEwAB/wNJAYcDMgFRAzIBUQMyAVEDMgFRAzIBUQMy
        AVEDMgFRAzIBUQMyAVEDMgFRAzIBUQMyAVEDMgFRAzIBUQMyAVEDMgFRAzsBZQNTAc8DAAH/AyQBNgNE
        AXwDUwGsA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQ
        AZ4DUgGoA1EBpxAAAVACTgGZAwABAQMtAUUDQgFzA0IBcwMgAS8EAAMQARUDQgF2A0UBfANCAXMBZwFd
        AVQBxQM1AVUMAAM6AdoDMgHfAyYBOCgAA0UBgQMSAfcDOQFgEwAB/wNTAawDVAGuA1QBrgNUAa4DVAGu
        A1QBrgNUAa4DVAGuA1QBrgNUAa4DVAGuA1QBrgNUAa4DVAGuA1QBrgNUAa4DVAGuA1MBrQNVAdgDAAH/
        AxsBJgQAAwQBBQMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMG
        AQgDEwEaA0cBgQMfASwQAAFQAk4BmQMAAQEHAAEBAwABAQMAAQEDAAEBAxsBJgNCAXQEAAMuAUcBUwFS
        AVABoxAAA0oBkwMZAfIDQQFyJAADEAEWA0sBrwMAAf4DFAEbEwAB/wMbASYQAAMEAQYDEAEWAxMBGgMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMdASkDUgGmAwAB/wMbASYQAAMOARMDJwE6
        AyoBQQMqAUEDKgFBAyoBQQMqAUEDKgFBAyoBQQMqAUEDKgFBAzQBVANJAYkDGQEjEAABUAJOAZkDAAEB
        AzgBXAFQAk4BmQFQAk4BmQFQAk4BmQNCAXMDGwEmA0MBdwMoATwBUAFPAU4BlwMEAQYQAAMdASkDGQHy
        A0gBwQMfASwDAAEBGAADBAEFAzoBYQMoAekDTAGxAwABARMAAf8DGwEmEAADKwFCA0gBhwNHAYMDRwGD
        A0cBgwNHAYMDRwGDA0cBgwNHAYMDRwGDA0cBgwNHAYMDSQGIA0gBhgMNAfwDHQEqEAADPQFpA0cBggNA
        AW4DQAFuA0ABbgNAAW4DQAFuA0ABbgNAAW4DQAFuA0ABbgNAAXADMQFNAwcBChAAAU8BTgFNAZUDCgEN
        FAADGwEmAVQBUgFPAaEBTQFMAUkBjQMdASkYAANIAYsDGAHzA0oBpAMfASwUAAMEAQUDNAFVAz8B0gMz
        AeADKwFDFAADTQHSAz4BagMtAUYDLQFGAy0BRgMuAUgDSwGPAzUBVwMkATYDJAE2AyQBNgMkATYDJAE2
        AyQBNgMkATYDJAE2AyQBNgMkATYDIwEzAxEBFwNOAaMDSAGEAz8BbQM/AW0DPwFtA0ABbgNIAYUDFgEf
        QAADMQFPA0MBdwNCAXQDQgF0A0IBdANCAXQDQgF0AUkCSAGDAVcBVAFRAacDKAE9AwIBAxgAAxYBHgNL
        AaUDGQHyA0gBwQNBAXIDJgE5AxcBIAMcAScDMAFLA0oBkwM0Ad4DLgHlAz0BawMHAQoUAAMoBD0BZwM8
        AWgDPAFoAzwBaAM9AWkDLAFDAwYBCDAAAxABFgMpAT4DKwFCAysBQgMrAUIDKwFCAxcBIAMBAQJAAAMF
        AQcDGQEjAxsBJgMbASYDGwEmAxsBJgMbASYDGwEmAxQBHAMEAQUcAAMBAQIDFgEeA0gBiwMZAfIDGQHy
        AzIB3wM9AdcDOQHZAy4B5QMGAfsDOQHZAzUBWAMJAQz/ABkAAx0BKQNKAZMDOgHaAw8B+AMcAfEDRwHD
        Az0BaQMHAQogAAFCAU0BPgcAAT4DAAEoAwABUAMAASgDAAEBAQABAQUAAeABARYAA//1AAEBAfABAAL/
        AfAGAAEBAfABAAF/Af8B4AcAAfABAAF/Af8BwAIAAT8B/wHDAf8C8AEAAX8B/wGAAgABPwH/AcEB/wH4
        AfABAAF/AgECAAE/Af8BwQH/AfgB8AEGAXwBAAEDAgABPwH/AcEB/wH4AfABBgF4AQABBwIAAT8B/wHB
        Af8B+AHwAQABeAE4AQ8CAAE/Af8BwQH/AfwB8AEAAXABfgEPAgABPwH/AcEB/wH8AfABBgFwAf8BDwIA
        AT8B/wHBAf8B/AHwAQABcQH/AQ8CAAE/Af8BwAH/AfwB8AEAAXEB/wGPAgABPwH/AcACAAHwAQABcQH/
        AY8HAAHwASABcQH/AY8EAAECAgAB8gEEAfEB/wEPAgABPAEAAQMBwAEAAfABAAHwAX4BDwIAATwBAAED
        AcABAAHzAeEB+AF8AR8FAAEPAf8B8AEBAfgBAAEfAwAB/wHwAQ8B/wHwAQMB+AEAAT8CAAj/AQAB/wIA
        Cw==
</value>
  </data>
</root>