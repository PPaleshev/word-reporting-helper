<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="treeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="treeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABS
        EAAAAk1TRnQBSQFMAgEBBAEAARABAAEQAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABKAMAAQEBAAEgBgABMv8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8AKwADCgENAxsBJgMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHgEr
        Ax4BKwMeASsDHgErAx4BKwMeASsDHQEpAxIBGAMKAQ0DGwEmAx4BKwMeASsDHgErAx4BKwMeASsDHgEr
        Ax4BKwMeASsDHgErAx4BKwMeASsDHgErAx4BKwMeASsDHQEpAxIBGAMCAQMUAAMBAQIDEQEXAxMBGgMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAw4BE1AAAwgBCwM8AWoDQwGEAxQBHANGAYADSwGO
        A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9
        A0YBfQNIAYQDSgGKA0UBhwNNAZEDRgF9A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9A0YBfQNGAX0DRgF9
        A0YBfQNGAX0DRgF9A0YBfQNIAYQDSgGLAx8BLBQAAycBOwM+AWsDPAFmAzwBZgM8AWYDPAFmAzwBZgM8
        AWYDPAFmAzwBZgM8AWYDQgF0AxYBH0gAAwQBBQM9AXADHgHpAwYB+gNDAYQDJQHzAyoBQAMOARMDDgET
        Aw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDGgEk
        A1IBpgMQAfsDOgFgAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgETAw4BEwMOARMDDgET
        Aw4BEwMOARMDGQEjA0oBmAM5AWADAAEBEAABTwFNAUsBjwMbASYDEwEaAxMBGgMTARoDEwEaAxMBGgMT
        ARoDEwEaAxMBGgMTARoDOgFhAzgBXEQAAwQBBgNAAXkDGgHsAwAB/wMeAekDOwFpAwAB/wMbASZAAAMK
        AQ4DUAGfAwAB/wM9AWk4AAMEAQUDPgFxA0EBeAMFAQcQAAFUAVABTgGZAwABAQMpAT4DPQFnAz0BZwM9
        AWcDPQFnAz0BZwM9AWcDPQFnAx0EKgFAAz0BZ0AAAwQBBgNCAYEDEgHzAwAB/wMaAewDPQFwAwgBCwMA
        Af8DGwEmQAADCgEOA1ABnwMAAf8DSQGGAwABATgAAzQBUwNIAYUDDQEREAABVAFQAU4BmQMAAQEDGwEm
        AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMTARoDKgFAAz0BZx8AAQEDFAEbAzgBYANCAYADQAF5
        Ay8BSgMEAQYEAAMEAQUDQAF5AxIB8wMAAf8DEgHzA0ABegMEAQUHAAH/AxsBJkAAAwoBDgNQAZ8DAAH/
        A1ABmwMKAQ44AAMkATUDSAGFAxQBGxAAAVQBUAFOAZkDAAEBAyABLgMxAU0DMQFNAzEBTQMxAU0DKgFB
        AwkBDAgAAyoBQAM9AWcUAAMHAQoDKwFDA0IBsQMAAf4DDAH3AxUB7wMTAfEDBAH7AxUB7wNDAYkDQQF9
        AxoB7AMAAf8DEgHzA0IBgQMEAQYLAAH/AxsBJkAAAwoBDgNQAZ8DAAH/A1ABnwMVAR04AAMRARcDRwGA
        Ax8BLBAAAVQBUAFOAZkDAAEBAyABLgMxAU0DMQFNAzEBTQMxAU0DKgFBAwgBCwgAAyoBQAM9AWcQAAMJ
        AQwDPAFrAyYB4AMcAeoDQgGvA0IBgQM7AWkDPQFvA0MBkgM6AcYDBgH6AwIB/QMAAf8DGgHsA0ABegME
        AQYPAAH/AxsBJkAAAwoBDgNQAZ8DAAH/A1ABmgMfAS04AAMCAQMDQgFyAyoBQBAAAVQBUAFOAZkDAAEB
        Ay0BRQFEAUMBQgF0AUQBQwFCAXQBRAFDAUIBdAFEAUMBQgF0AUQBQwFCAXQBRAFDAUIBdAFEAUMBQgF0
        AyABLgMqAUADPQFnEAADNQFYAyEB5QMzAdEDOQFhAxABFgwAAwMBBAMfAS0DQgGMAxIB8gMCAf0DQAF8
        AwQBBRMAAf8DIAEvQAADDQERA1ABpAMAAf8DSwGOAywBRDwAAzsBYwMyAVAQAAFUAVABTgGZAwABAQMR
        ARcDGwEmAxsBJgMbASYDGwEmAxsBJgMbASYDGwEmAwsBDwMqAUADPQFnDAADBwEKAywB2QMnAd4DNAFV
        AwQBBRgAAw8BFANDAYsDBgH6A0MBiQMAAQETAAH/AysBQkAAAxIBGQNSAbADAAH/A0YBfgM3AVo8AAM0
        AVQDOgFgEAABVAFQAU4BmQMAAQECQgFBAXMBYwFbAVQBvwFjAVsBVAG/AWMBWwFUAb8BYwFbAVQBvwFj
        AVsBVAG/AUQBQwFCAXQIAAMqAUADPQFnDAADOwFpAwQB+wNDAZMDBAEFIAADHwEtAzoBxgMVAe8DBAEG
        EwAB/wMrAUJAAAMSARkDUgGwAwAB/wNAAW8DPQFoPAADJwE6A0QBexAAAVQBUAFOAZkDAAEBAwwBEAMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDCAELAyoBQAM9AWcMAAM7AcMDIQHlAy8BSyQAAwQBBQND
        AZIDAgH8Ay8BShMAAf8DKwFCQAADEgEZA1IBsAMAAf8DOAFcA0QBdwMHAQk4AAMbASYDSwGOEAABVAFQ
        AU4BmQMAAQEDKAE9AzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgMdBCoBQAM9AWcMAAMTAfEDLAHZ
        AxwBJygAAz0BbwMTAfEDQAF5EwAB/wMsAUNAAAMSARkDUwGxAwAB/wMvAUkDSAGFAyABLwMKAQ0DCgEN
        AwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAwoBDQMKAQ0DCgENAxwBJwNRAaAQAAFU
        AVABTgGZAwABAQMbASYDKgFAAyoBQAMdASkDEwEaAxMBGgMbASYDKAE9AyIBMQM4AV0DPQFnDAADCgH4
        Ay8B1wMXASAoAAM7AWkDFQHvA0IBgBMAAf8DSQGHAzIBUQMyAVEDMgFRAzIBUQMyAVEDMgFRAzIBUQMy
        AVEDMgFRAzIBUQMyAVEDMgFRAzIBUQMyAVEDMgFRAzIBUQM7AWUDTwHPAwAB/wMkATYDRAF8A1MBrANQ
        AZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1ABngNQAZ4DUAGeA1IBqANR
        AacQAAFUAVABTgGZAwABAQMtAUUDQgFzA0IBcwMgAS8EAAMQARUBQwJCAXYDRQF8A0IBcwFvAV4BUAHF
        AzUBVQwAAywB2gMmAd8DJgE4KAADQgGBAwwB9wM4AWATAAH/A1MBrANUAa4DVAGuA1QBrgNUAa4DVAGu
        A1QBrgNUAa4DVAGuA1QBrgNUAa4DVAGuA1QBrgNUAa4DVAGuA1QBrgNUAa4DUwGtA1EB2AMAAf8DGwEm
        BAADBAEFAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMT
        ARoDRwGBAx8BLBAAAVQBUAFOAZkDAAEBBwABAQMAAQEDAAEBAwABAQMbASYBRAFDAUIBdAQAAy4BRwFU
        AVMBUAGjEAADQwGTAxIB8gM+AXIkAAMQARYDQgGvAwAB/gMUARsTAAH/AxsBJhAAAwQBBgMQARYDEwEa
        AxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEwEaAx0BKQNSAaYDAAH/AxsBJhAAAw4BEwMn
        AToDKgFBAyoBQQMqAUEDKgFBAyoBQQMqAUEDKgFBAyoBQQMqAUEDNAFUA0kBiQMZASMQAAFUAVABTgGZ
        AwABAQM4AVwBVAFQAU4BmQFUAVABTgGZAVQBUAFOAZkDQgFzAxsBJgFFAUQBQwF3AygBPAFUAVABTQGX
        AwQBBhAAAx0BKQMSAfIDPAHBAx8BLAMAAQEYAAMEAQUDOQFhAx4B6QNCAbEDAAEBEwAB/wMbASYQAAMr
        AUIDSAGHA0cBgwNHAYMDRwGDA0cBgwNHAYMDRwGDA0cBgwNHAYMDRwGDA0cBgwNJAYgDSAGGAwwB/AMd
        ASoQAAM9AWkDRwGCA0ABbgNAAW4DQAFuA0ABbgNAAW4DQAFuA0ABbgNAAW4DQAFuA0ABcAMxAU0DBwEK
        EAABUQFPAU0BlQMKAQ0UAAMbASYBWQFUAU4BoQFUAU0BRwGNAx0BKRgAA0MBiwMSAfMDQwGkAx8BLBQA
        AwQBBQM0AVUDMgHSAyYB4AMrAUMUAANGAdIDPgFqAy0BRgMtAUYDLQFGAy4BSANLAY8DNgFXAyQBNgMk
        ATYDJAE2AyQBNgMkATYDJAE2AyQBNgMkATYDJAE2AyQBNgMjATMDEQEXA0oBowNIAYQDPwFtAz8BbQM/
        AW0DQAFuA0gBhQMWAR9AAAMyAU8BRQFEAUMBdwFEAUMBQgF0AUQBQwFCAXQBRAFDAUIBdAFEAUMBQgF0
        AUQBQwFCAXQBSwFJAUgBgwFbAVYBUAGnASkCKAE9AwIBAxgAAxYBHgNDAaUDEgHyAzwBwQM+AXIDJgE5
        AxcBIAMcAScDLwFLA0MBkwMnAd4DIQHlAzwBawMHAQoUAAMoBD0BZwM8AWgDPAFoAzwBaAM9AWkDLAFD
        AwYBCDAAAxABFgMpAT4DKwFCAysBQgMrAUIDKwFCAxcBIAMBAQJAAAMFAQcDGQEjAxsBJgMbASYDGwEm
        AxsBJgMbASYDGwEmAxQBHAMEAQUcAAMBAQIDFgEeA0MBiwMSAfIDEgHyAyYB3wMvAdcDLAHZAyEB5QME
        AfsDLAHZAzUBWAMJAQz/ABkAAx0BKQNDAZMDLAHaAwoB+AMTAfEDOwHDAzsBaQMHAQogAAFCAU0BPgcA
        AT4DAAEoAwABUAMAASgDAAEBAQABAQUAAeABARYAA//1AAEBAfABAAL/AfAGAAEBAfABAAF/Af8B4AcA
        AfABAAF/Af8BwAIAAT8B/wHDAf8C8AEAAX8B/wGAAgABPwH/AcEB/wH4AfABAAF/AgECAAE/Af8BwQH/
        AfgB8AEGAXwBAAEDAgABPwH/AcEB/wH4AfABBgF4AQABBwIAAT8B/wHBAf8B+AHwAQABeAE4AQ8CAAE/
        Af8BwQH/AfwB8AEAAXABfgEPAgABPwH/AcEB/wH8AfABBgFwAf8BDwIAAT8B/wHBAf8B/AHwAQABcQH/
        AQ8CAAE/Af8BwAH/AfwB8AEAAXEB/wGPAgABPwH/AcACAAHwAQABcQH/AY8HAAHwASABcQH/AY8EAAEC
        AgAB8gEEAfEB/wEPAgABPAEAAQMBwAEAAfABAAHwAX4BDwIAATwBAAEDAcABAAHzAeEB+AF8AR8FAAEP
        Af8B8AEBAfgBAAEfAwAB/wHwAQ8B/wHwAQMB+AEAAT8CAAj/AQAB/wIACw==
</value>
  </data>
</root>