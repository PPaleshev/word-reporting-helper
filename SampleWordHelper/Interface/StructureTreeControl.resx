<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="treeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="treeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABm
        DQAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJBYAAwMBBAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMG
        AQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwQBBgMAAQEEAAMDAQQDBgEI
        AwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEI
        AwYBCAMGAQgDAgEDGAADQgGHAyYB4AM6AcIDOgHCAzoBwgM6AcIDOgHCAzoBwgM6AcIDOgHCAzoBwgM6
        AcIDOgHCAzoBwgM6AcIDOgHCAzMB0QNDAasDAAEBaAADKQE+A0QBpgNCAbIDQgGyA0IBsgNCAbIDQgGy
        A0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGy
        A0IBrAM4AV8DKQE+A0QBpgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGy
        A0IBsgNCAbIDQgGyA0IBsgNCAbIDQgGyA0IBsgNEAZ8DHAEoFAADQgGHA0IBjAMSARgDEgEYAxIBGAMS
        ARgDEgEYAxIBGAMSARgDEgEYAxIBGAMSARgDEgEYAxIBGAMSARgDEgEYAzIBUgNEAZ0DAAEBaAADJQHi
        Az8BdgMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEv
        AyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAzMBUwM5AckDEAH0A0EBfwMgAS8DIAEvAyABLwMgAS8DIAEv
        AyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyEBMQNEAZwDMAHV
        FAADQgGHA0IBgDgAAyoBQANEAZsDAAEBawAB/wMhATBQAAMSARgDOgHCAwAB/wM8AWtIAAMoATwDDgH1
        AwQBBhAAA0IBhwNCAYA4AAMqAUADRAGbAwABAWsAAf8DIQEwUAADEgEYAzoBwgMAAf8DQwGJSAADCgEN
        AwQB+wMcASgQAANCAYcDQgGAOAADKgFAA0QBmwMAAQFrAAH/AyEBMFAAAxIBGAM6AcIDAAH/A0MBpwMA
        AQFIAAMzAdADMwFTEAADQgGHA0IBgDgAAyoBQANEAZsDAAEBawAB/wMhATBQAAMSARgDOgHCAwAB/wM9
        AbwDDgETSAADQwGSA0EBfRAAA0IBhwNCAYA4AAMqAUADRAGbAwABAWsAAf8DIQEwUAADEgEYAzoBwgMA
        Af8DPAG/AxwBKEgAAzMBUwNDAaUDAgEDDAADQgGHA0IBgDgAAyoBQANEAZsDAAEBawAB/wMhATBQAAMS
        ARgDOgHCAwAB/wNBAbUDKAE9SAADDwEUAz4BvgMPARQMAANCAYcDQgGAOAADKgFAA0QBmwMAAQFrAAH/
        AyEBMFAAAxIBGAM6AcIDAAH/A0IBqQMzAVRMAAM/AbcDHQEpDAADQgGHA0IBgDgAAyoBQANEAZsDAAEB
        awAB/wMoAT1QAAMWAR4DOQHIAwAB/wNDAZEDQAF3TAADQwGiAykBPwwAA0IBhwNCAYA4AAMqAUADRAGb
        AwABAWsAAf8DMwFTUAADHQEpAzEB0wMAAf8DQAF4A0QBlUwAA0IBjAM0AVUMAANCAYcDQgGAOAADKgFA
        A0QBmwMAAQFrAAH/AzMBU1AAAx0BKQMxAdMDAAH/AzoBZANCAakDAAEBSAADOgFmA0ABewwAA0IBhwNC
        AYA4AAMqAUADRAGbAwABAWsAAf8DMwFTUAADHQEpAzEB0wMAAf8DMAFOAz4BuwMDAQRIAAMuAUkDQwGZ
        DAADQgGHA0IBgDgAAyoBQANEAZsDAAEBawAB/wMzAVNQAAMdASkDMQHTAwAB/wMmATkDQgGyAyEBMEgA
        AyMBMwNCAa4MAANCAYcDQgGAOAADKgFAA0QBmwMAAQFrAAH/AzMBVFAAAx0BKgMxAdMDAAH/AyEBMANE
        AY8DQgGBAxABFgMQARYDEAEWAxABFgMQARYDEAEWAxABFgMQARYDEAEWAxABFgMQARYDEAEWAxABFgMQ
        ARYDEAEWAxABFgMQARYDEAEWAygBPQM6AcIMAANCAYcDQgGAIAADDQERAxABFgMQARYDEAEWAxABFgMQ
        ARYDMQFPA0QBnAMAAQFrAAH/A0MBpQM6AWUDOgFlAzoBZQM6AWUDOgFlAzoBZQM6AWUDOgFlAzoBZQM6
        AWUDOgFlAzoBZQM6AWUDOgFlAzoBZQM6AWUDOgFlAzoBZQM6AWUDOgFlA0MBhQMcAesDAAH/AyEBMAMp
        AT8DMwHQAzwBwAM8AcADPAHAAzwBwAM8AcADPAHAAzwBwAM8AcADPAHAAzwBwAM8AcADPAHAAzwBwAM8
        AcADPAHAAzwBwAM8AcADPAHAAzgBygNDAZ4MAANCAYcDQgGAIAADRAGcAzwBwAM8AcADPAHAAzwBwAM8
        AcADNQHOA0MBom8AAf8DQgGtA0IBrwNCAa8DQgGvA0IBrwNCAa8DQgGvA0IBrwNCAa8DQgGvA0IBrwNC
        Aa8DQgGvA0IBrwNCAa8DQgGvA0IBrwNCAa8DQgGvA0IBrwNCAa8DQgGuAyQB4wMAAf8DIQEwCAADBgEI
        AwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEI
        AwYBCAMkATYDQQGzAwcBCQwAA0IBhwNCAYAgAANCAawDJQE3AwYBCAMGAQgDBgEIAyYBOQMsAdkDKAE8
        bwAB/wMhATBQAAMTARoDOwHDAwAB/wMhATAXAAEBAxABFgMZASMDGQEjAxkBIwMZASMDGQEjAxkBIwMZ
        ASMDGQEjAxkBIwMZASMDGQEjAxkBIwM2AVwDQwGqAwQBBgwAA0IBhwNCAYAgAANDAasDIQEwBAADBAEG
        AzIBUQMvAdcDMAFOAwABAW8AAf8DIQEwFAADCgENAzgBXwNCAYADQgGAA0IBgANCAYADQgGAA0IBgANC
        AYADQgGAA0IBgANCAYADQgGAA0IBgANCAYADRAGVAzsBwwMAAf8DIQEwFAADIAEvA0IBrgM/AbgDPwG4
        Az8BuAM/AbgDPwG4Az8BuAM/AbgDPwG4Az8BuAM/AbgDPwG4Az8BuAM8AcADNAFVEAADQgGHA0IBgCAA
        A0MBqwMhATAEAAMyAVADPQG8AygBPAMAAQFzAAH/AyEBMBQAAzoBZgM4AccDQgGHA0IBhwNCAYcDQgGH
        A0IBhwNCAYcDQgGHA0IBhwNCAYcDQgGHA0IBhwNCAYcDQgGHA0ABfAMcASgDDAH3AygBPQMAAQEDAAEB
        AwABAQMAAQEDAAEBA0MBpwM5AWJIAANCAYcDQgGAIAADQwGrAyEBMAMjATMDLgHYAygBPHgAA0EBtQNE
        AaADPwF1Az8BdQM/AXUDPwF1A0ABeAM/AbcDIgEyPAADPAFrAz0BvANBAbUDQQG1A0EBtQNBAbUDPwG3
        A0MBkQMPARRIAANCAYcDQgGAIAADQgGtA0EBfgMvAdcDMAFOAwABAXgAAxYBHwM1AVkDOgFlAzoBZQM6
        AWUDOgFlAzoBZQMkATYDAwEEPwABAQMWAR4DGgElAxoBJQMaASUDGgElAxoBJQMJAQxMAANCAYcDRAGY
        AyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADNQHOAzYBywMoATwDAAEB/wBJAANCAYcDAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIAHmAykBP4QAAUIBTQE+BwABPgMAASgDAAFg
        AwABGAMAAQEBAAEBBQABIAEBFgAD/wEAAYACAAGAAQABBwHgAQABAwgAAQMB4AEAAQMIAAEDAecB/wHj
        AwABPwH/AfwBPwH/AfEB5wH/AeMDAAE/Af8B/AE/Af8B8QHnAf8B4wMAAT8B/wH8AR8B/wH5AecB/wHj
        AwABPwH/AfwBHwH/AfkB5wH/AeMDAAE/Af8B/AEfAf8B+AHnAf8B4wMAAT8B/wH8AR8B/wH4AecB/wHj
        AwABPwH/AfwBHwH/AfwB5wH/AeMDAAE/Af8B/AEfAf8B/AHnAf8B4wMAAT8B/wH8AR8B/wH8AecB/wHj
        AwABPwH/AfwBDwH/AfwB5wH/AeMDAAE/Af8B/AEPAf8B/AHnAf8B4wMAAT8B/wH8AQ8B/wH8AecB/wHj
        AwABPwH/AfwDAAHnAfgBAwkAAecB+AEHBgABMAIAAecB+AEHAwABPwH/AfwBPgIAAecB+QEHAwABPgIA
        AT4BAAEBAecB+QEPAwABPgMAAX8B/wHnAfgBPwQAAX8B/wEAAX8B/wHnAfgBPwQAAX8B/wEAAv8B4AEA
        AX8DAAb/AeABAQH/AwAL
</value>
  </data>
</root>