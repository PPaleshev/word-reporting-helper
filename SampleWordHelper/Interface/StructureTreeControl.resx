<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="treeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="treeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABs
        DwAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJBYAAwMBBAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMG
        AQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwQBBgMAAQEEAAMDAQQDBgEI
        AwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEI
        AwYBCAMGAQgDAgEDzAADKQE+A1EBpgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNT
        AbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1IBrAM5AV8DKQE+A1EBpgNT
        AbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNTAbIDUwGyA1MBsgNT
        AbIDUwGyA1MBsgNQAZ8DHAEoHAADCwEPAUMBQgFBAXMBSQFHAUYBgAFJAUcBRgGAAUkBRwFGAYABSQFH
        AUYBgAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGA
        AzkBXwMAAQFwAANCAeIDQgF2AyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMg
        AS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DMwRTAckDIAH0A0UBfwMgAS8DIAEv
        AyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEvAyABLwMgAS8DIAEv
        AyEBMQNPAZwDTQHVHAABXAFUAU0BoAM5AV8DKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMq
        AUADKgFAAyoBQAFSAU4BSgGSATkCOAFecwAB/wMhATBQAAMSARgDUgHCAwAB/wM+AWtIAAMoATwDGwH1
        AwQBBhgAAXYBYQFMAcAwAAMqAUABSQFHAUYBgHMAAf8DIQEwUAADEgEYA1IBwgMAAf8DSQGJSAADCgEN
        AwoB+wMcASgYAAF2AWEBTAHABAADKgFAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAUkBRwFGAYABSQFH
        AUYBgAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAxcBIAMqAUABSQFHAUYBgHMAAf8DIQEw
        UAADEgEYA1IBwgMAAf8DUQGnAwABAUgAA1AB0AMzAVMYAAF2AWEBTAHABAADFwEgAyoBQAMqAUADKgFA
        AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAwwBEAMqAUABSQFHAUYBgHMAAf8DIQEwUAADEgEYA1IBwgMA
        Af8DUwG8Aw4BE0gAA0wBkgNFAX0YAAF2AWEBTAHABAADFwEgAyoBQAMqAUADKgFAAyoBQAMqAUADKgFA
        AwwBEAwAAyoBQAFJAUcBRgGAcwAB/wMhATBQAAMSARgDUgHCAwAB/wNUAb8DHAEoSAADMwFTA08BpQMC
        AQMUAAF2AWEBTAHABAADKgFAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJ
        AUcBRgGAAxcBIAwAAyoBQAFJAUcBRgGAcwAB/wMhATBQAAMSARgDUgHCAwAB/wNTAbUDKAE9SAADDwEU
        A1QBvgMPARQUAAF2AWEBTAHAMAADKgFAAUkBRwFGAYBzAAH/AyEBMFAAAxIBGANSAcIDAAH/A1EBqQM0
        AVRMAANTAbcDHQEpFAABdgFhAUwBwAQAAjoBOQFgAXYBYQFMAcABdgFhAUwBwAF2AWEBTAHAAXYBYQFM
        AcABdgFhAUwBwAF2AWEBTAHAAXYBYQFMAcABdgFhAUwBwAF2AWEBTAHAAyEBMAMqAUABSQFHAUYBgHMA
        Af8DKAE9UAADFgEeA1QByAMAAf8DTAGRA0MBd0wAA1ABogMpAT8UAAF2AWEBTAHAMAADKgFAAUkBRwFG
        AYBzAAH/AzMBU1AAAx0BKQNOAdMDAAH/A0MBeANNAZVMAANKAYwDNAFVFAABdgFhAUwBwAQAAjoBOQFg
        AXYBYQFMAcABdgFhAUwBwAF2AWEBTAHAAXYBYQFMAcABdgFhAUwBwAF2AWEBTAHAAXYBYQFMAcAMAAMq
        AUABSQFHAUYBgHMAAf8DMwFTUAADHQEpA04B0wMAAf8DOwFkA1EBqQMAAQFIAAM8AWYDRAF7FAABdgFh
        AUwBwDAAAyoBQAFJAUcBRgGAcwAB/wMzAVNQAAMdASkDTgHTAwAB/wMxAU4DVAG7AwMBBEgAAy8BSQNO
        AZkUAAF2AWEBTAHABAADKgFAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJ
        AUcBRgGAAUkBRwFGAYABSQFHAUYBgAFJAUcBRgGAAxcBIAMqAUABSQFHAUYBgHMAAf8DMwFTUAADHQEp
        A04B0wMAAf8DJgE5A1MBsgMhATBIAAMjATMDUgGuFAABdgFhAUwBwAQAAxcBIAMqAUADKgFAAyoBQAMq
        AUADKgFAAyoBQAMqAUADKgFAAyoBQAMMARADKgFAAUkBRwFGAYBzAAH/AzQBVFAAAx0BKgNOAdMDAAH/
        AyEBMANLAY8DRgGBAxABFgMQARYDEAEWAxABFgMQARYDEAEWAxABFgMQARYDEAEWAxABFgMQARYDEAEW
        AxABFgMQARYDEAEWAxABFgMQARYDEAEWAygBPQNSAcIUAAF2AWEBTAHABAADFwEgAyoBQAMqAUADKgFA
        AwwBEAsAAQEDIwE0AyoBQAMqAUABQQFAAT8BcAFJAUcBRgGAcwAB/wNPAaUDOwFlAzsBZQM7AWUDOwFl
        AzsBZQM7AWUDOwFlAzsBZQM7AWUDOwFlAzsBZQM7AWUDOwFlAzsBZQM7AWUDOwFlAzsBZQM7AWUDOwFl
        AzsBZQNIAYUDNwHrAwAB/wMhATADKQE/A1AB0ANTAcADUwHAA1MBwANTAcADUwHAA1MBwANTAcADUwHA
        A1MBwANTAcADUwHAA1MBwANTAcADUwHAA1MBwANTAcADUwHAA1MBwANTAcoDTwGeFAABdgFhAUwBwAQA
        AyoBQAFJAUcBRgGAAUkBRwFGAYABSQFHAUYBgAMXASAIAAFKAUgBRgGCAVoBUwFMAZ8BSQFHAUYBgAFJ
        AUcBRgGAAZ4BbQFBAdoBPAI7AWRzAAH/A1MBrQNSAa8DUgGvA1IBrwNSAa8DUgGvA1IBrwNSAa8DUgGv
        A1IBrwNSAa8DUgGvA1IBrwNSAa8DUgGvA1IBrwNSAa8DUgGvA1IBrwNSAa8DUgGvA1IBrgNBAeMDAAH/
        AyEBMAgAAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMGAQgDBgEIAwYBCAMG
        AQgDBgEIAwYBCAMGAQgDJAE2A1MBswMHAQkUAAF2AWEBTAHAIAABdgFhAUwBwAMAAQEEAAM2AVkBXgFV
        AU0BpHcAAf8DIQEwUAADEwEaA1MBwwMAAf8DIQEwFwABAQMQARYDGQEjAxkBIwMZASMDGQEjAxkBIwMZ
        ASMDGQEjAxkBIwMZASMDGQEjAxkBIwMZASMDOAFcA1EBqgMEAQYUAAF2AWEBTAHABAACOgE5AWABdgFh
        AUwBwAF2AWEBTAHAAXYBYQFMAcABdgFhAUwBwAFSAU4BSgGQBAABdgFhAUwBwAQAAycBOgGDAWUBSgHK
        AwQBBncAAf8DIQEwFAADCgENAzkBXwNGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgANG
        AYADRgGAA0YBgANGAYADTQGVA1MBwwMAAf8DIQEwFAADIAEvA1IBrgNUAbgDVAG4A1QBuANUAbgDVAG4
        A1QBuANUAbgDVAG4A1QBuANUAbgDVAG4A1QBuANTAcADNAFVGAABdgFhAUwBwCAAAXYBYQFMAcADGAEh
        AccBdQErAfADDgETewAB/wMhATAUAAM8AWYDUQHHA0gBhwNIAYcDSAGHA0gBhwNIAYcDSAGHA0gBhwNI
        AYcDSAGHA0gBhwNIAYcDSAGHA0gBhwNEAXwDHAEoAxoB9wMoAT0DAAEBAwABAQMAAQEDAAEBAwABAQNR
        AacDOgFiUAABagFbAU0BswMWAR4cAAF2AWEBTAHAAbkBcQEyAekDGgElfAADUwG1A1EBoANCAXUDQgF1
        A0IBdQNCAXUDQwF4A1MBtwMiATI8AAM+AWsDUwG8A1MBtQNTAbUDUwG1A1MBtQNTAbcDTAGRAw8BFFAA
        Ax8BLQFqAVsBTQGzAXYBYQFMAcABdgFhAUwBwAF2AWEBTAHAAXYBYQFMAcABdgFhAUwBwAF2AWEBTAHA
        AXYBYQFMAcABdgFhAUwBwAMoAT2AAAMWAR8DNgFZAzsBZQM7AWUDOwFlAzsBZQM7AWUDJAE2AwMBBD8A
        AQEDFgEeAxoBJQMaASUDGgElAxoBJQMaASUDCQEM/wD/AIIAAUIBTQE+BwABPgMAASgDAAFgAwABGAMA
        AQEBAAEBBQABIAEBFgAD/wEAAYACAAGAAQABBwP/CAABAwH4AQABDwgAAQMB+AEAAQ8DAAE/Af8B/AE/
        Af8B8QH7Af8BzwMAAT8B/wH8AT8B/wHxAfoBAAEPAwABPwH/AfwBHwH/AfkB+gEAAQ8DAAE/Af8B/AEf
        Af8B+QH6AQEBzwMAAT8B/wH8AR8B/wH4AfoBAQHPAwABPwH/AfwBHwH/AfgB+wH/Ac8DAAE/Af8B/AEf
        Af8B/AH6AQABDwMAAT8B/wH8AR8B/wH8AfsB/wHPAwABPwH/AfwBHwH/AfwB+gEBAc8DAAE/Af8B/AEP
        Af8B/AH7Af8BzwMAAT8B/wH8AQ8B/wH8AfoBAAEPAwABPwH/AfwBDwH/AfwB+gEAAQ8DAAE/Af8B/AMA
        AfoBDAEPCQAB+gEMAQ8GAAEwAgAB+wH8AZ8DAAE/Af8B/AE+AgAB+gEFAR8DAAE+AgABPgEAAQEB+wH8
        AT8DAAE+AwABfwH/AfkB/AF/BAABfwH/AQABfwH/AfgBAAH/BAABfwH/AQAF/wMACf8DAAs=
</value>
  </data>
</root>